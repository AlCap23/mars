project(main_gui)
set(PROJECT_VERSION 1.0)
set(PROJECT_DESCRIPTION "The library provides a small core for a modular gui implementation.")
cmake_minimum_required(VERSION 2.6)

include(FindPkgConfig)

if(WIN32)
        # this fixes the error 998 from the LibManager
        SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--enable-auto-import")
        SET(CMAKE_MODULE_LINKER_FLAGS "-Wl,--enable-auto-import")
else(WIN32)
        SET(CMAKE_CXX_FLAGS "-fPIC")
endif(WIN32)

if(CMAKE_COMPILER_IS_GNUCXX)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
endif()

find_package(Qt4 REQUIRED)
include(${QT_USE_FILE})
include_directories( ${QT_INCLUDE_DIR} ${QT_QTXML_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/include)
link_directories(${QT_LIBRARY_DIR})
add_definitions("-D_REENTRANT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED")
remove_definitions(-DQT_DLL)


if(NOT LIB_MANAGER_INCLUDE_DIRS)
    pkg_check_modules(LIB_MANAGER "lib_manager")
    include_directories(${LIB_MANAGER_INCLUDE_DIRS})
    link_directories(${LIB_MANAGER_LIBRARY_DIRS})
endif()

# we only need the header
if(NOT CFG_MANAGER_INCLUDE_DIRS)
pkg_check_modules(CFG_MANAGER "cfg_manager")
include_directories(${CFG_MANAGER_INCLUDE_DIRS})
endif()

include_directories(
    src
    src/interfaces
    src/qtpropertybrowser
    src/qtpropertybrowser/extension
)


set(SOURCES 
    src/BaseWidget.cpp
    src/MainGUI.cpp
    src/MyQDockWidget.cpp
    src/MyQMainWindow.cpp
    src/MyQMdiArea.cpp
    src/PropertyDialog.cpp

    src/qtpropertybrowser/qtbuttonpropertybrowser.cpp
    src/qtpropertybrowser/qteditorfactory.cpp
    src/qtpropertybrowser/qtgroupboxpropertybrowser.cpp
    src/qtpropertybrowser/qtpropertybrowser.cpp
    src/qtpropertybrowser/qtpropertybrowserutils.cpp
    src/qtpropertybrowser/qtpropertymanager.cpp
    src/qtpropertybrowser/qttreepropertybrowser.cpp
    src/qtpropertybrowser/qtvariantproperty.cpp

    src/qtpropertybrowser/extension/fileedit.cpp
    src/qtpropertybrowser/extension/fileeditfactory.cpp
    src/qtpropertybrowser/extension/filepathmanager.cpp
    src/qtpropertybrowser/extension/variantfactory.cpp
    src/qtpropertybrowser/extension/variantmanager.cpp
)

set(HEADERS
    include/main_gui/BaseWidget.h
    include/main_gui/MainGUI.h
    include/main_gui/MyQDockWidget.h
    include/main_gui/MyQMainWindow.h
    include/main_gui/MyQMdiArea.h
    include/main_gui/PropertyCallback.h
    include/main_gui/PropertyDialog.h


)

set(INTERFACE_HEADER
    include/interfaces/GuiInterface.h
    include/interfaces/MenuInterface.h
)

set(PROP_HEADERS
    include/main_gui/qtpropertybrowser/qtbuttonpropertybrowser.h
    include/main_gui/qtpropertybrowser/qteditorfactory.h
    include/main_gui/qtpropertybrowser/qtgroupboxpropertybrowser.h
    include/main_gui/qtpropertybrowser/qtpropertybrowser.h
    include/main_gui/qtpropertybrowser/qtpropertybrowserutils.h
    include/main_gui/qtpropertybrowser/qtpropertymanager.h
    include/main_gui/qtpropertybrowser/qttreepropertybrowser.h
    include/main_gui/qtpropertybrowser/qtvariantproperty.h

    include/main_gui/qtpropertybrowser/extension/fileedit.h
    include/main_gui/qtpropertybrowser/extension/fileeditfactory.h
    include/main_gui/qtpropertybrowser/extension/filepathmanager.h
    include/main_gui/qtpropertybrowser/extension/variantfactory.h
    include/main_gui/qtpropertybrowser/extension/variantmanager.h
)

set(QT_MOC_HEADER
    include/main_gui/BaseWidget.h
    include/main_gui/MainGUI.h
    include/main_gui/MyQDockWidget.h
    include/main_gui/MyQMainWindow.h
    include/main_gui/MyQMdiArea.h
    include/main_gui/PropertyDialog.h

    include/main_gui/qtpropertybrowser/qtpropertybrowserutils.h

    include/main_gui/qtpropertybrowser/extension/fileedit.h
    include/main_gui/qtpropertybrowser/extension/fileeditfactory.h
    include/main_gui/qtpropertybrowser/extension/filepathmanager.h
    include/main_gui/qtpropertybrowser/extension/variantfactory.h
    include/main_gui/qtpropertybrowser/extension/variantmanager.h
)

set(QT_OWN_MOC
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtbuttonpropertybrowser.moc
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qteditorfactory.moc
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtgroupboxpropertybrowser.moc
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtpropertybrowser.moc
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtpropertymanager.moc
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qttreepropertybrowser.moc
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtvariantproperty.moc
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qteditorfactory.moc1
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qttreepropertybrowser.moc1
    ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtpropertymanager.moc1
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/include/main_gui/qtpropertybrowser/qtbuttonpropertybrowser.h
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtbuttonpropertybrowser.moc
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/include/main_gui/qtpropertybrowser/qteditorfactory.h
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qteditorfactory.moc
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/include/main_gui/qtpropertybrowser/qtgroupboxpropertybrowser.h
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtgroupboxpropertybrowser.moc
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/include/main_gui/qtpropertybrowser/qtpropertybrowser.h
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtpropertybrowser.moc
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/include/main_gui/qtpropertybrowser/qtpropertymanager.h
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtpropertymanager.moc
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/include/main_gui/qtpropertybrowser/qttreepropertybrowser.h
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qttreepropertybrowser.moc
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/include/main_gui/qtpropertybrowser/qtvariantproperty.h
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtvariantproperty.moc
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/src/qtpropertybrowser/qteditorfactory.cpp
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qteditorfactory.moc1
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/src/qtpropertybrowser/qttreepropertybrowser.cpp
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qttreepropertybrowser.moc1
)

QT4_GENERATE_MOC (${CMAKE_CURRENT_SOURCE_DIR}/src/qtpropertybrowser/qtpropertymanager.cpp
     ${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser/qtpropertymanager.moc1
)

qt4_wrap_cpp( QT_MOC_HEADER_SRC ${QT_MOC_HEADER} )

include_directories(${CMAKE_CURRENT_BINARY_DIR}/src/qtpropertybrowser)

add_library(${PROJECT_NAME} SHARED ${SOURCES} ${QT_MOC_HEADER_SRC} ${QT_OWN_MOC})

target_link_libraries(${PROJECT_NAME}
                      ${LIB_MANAGER_LIBRARIES}
                      ${QT_LIBRARIES}
 )

if(WIN32)
  set(LIB_INSTALL_DIR bin) # .dll are in PATH, like executables
else(WIN32)
  set(LIB_INSTALL_DIR lib)
endif(WIN32)


set(_INSTALL_DESTINATIONS
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION ${LIB_INSTALL_DIR}
    ARCHIVE DESTINATION lib
)


# Install the library into the lib folder
install(TARGETS ${PROJECT_NAME} ${_INSTALL_DESTINATIONS})

# Install headers into mars include directory
install(FILES ${INTERFACE_HEADER} DESTINATION include/mars/interfaces)
install(FILES ${HEADERS} DESTINATION include/mars/${PROJECT_NAME})
install(FILES ${PROP_HEADERS} DESTINATION include/mars/${PROJECT_NAME}/qtpropertybrowser)

# Prepare and install necessary files to support finding of the library 
# using pkg-config
configure_file(${PROJECT_NAME}.pc.in ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc @ONLY)
install(FILES ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc DESTINATION lib/pkgconfig)


